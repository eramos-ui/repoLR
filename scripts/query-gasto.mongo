//carteraGasto
use GastosComunes;

// Parámetros simulados
const year = 2025;
//const claseMovimiento = 'GASTO_EMERGENCIA';
//const claseMovimiento = 'GASTO_TODOS';
const claseMovimiento = 'GASTO_NORMAL';
const claseMovimientoMap = {
  GASTO_EMERGENCIA: [99],
  GASTO_NORMAL: Array.from({ length: 98 }, (_, i) => i + 1), // 1 al 98
  //GASTO_NORMAL: [98], // 1 al 98
  GASTO_TODOS: Array.from({ length: 99 }, (_, i) => i + 1),
};
const clasesPermitidas = claseMovimientoMap[claseMovimiento];
//db.carteraGasto.find().limit(3);
db.carteraGasto.aggregate([
    {
      //convierte fechaDocumento de string a Date
      $addFields: {
        fechaDate: { $toDate: "$fechaDocumento" }
      }
    },
    {
    // corresponde al where
      $match: {
       fechaDate: {
          $gte: new Date(Number(year), 0, 1),
          $lt: new Date(Number(year) + 1, 0, 1)        
       },
       tipoDocumento:'GASTO',
       entradaSalida: 'E',
       claseMovimiento: { $in: clasesPermitidas }
      }
    },
        {
      $lookup: {
        from: "docGasto",
        let: {
          tipoDoc: "$tipoDocumento",
          nroDoc: "$nroDocumento"
        },
        pipeline: [
          {
            $match: {
              $expr: {
                $and: [
                  { $eq: ["$tipoDocumento", "$$tipoDoc"] },
                  { $eq: ["$nroDocumento", "$$nroDoc"] }
                ]
              }
            }
          }
        ],
        as: "docGastoInfo"
      }
    },
    {
      $unwind: {
        path: "$docGastoInfo" //INNER JOIN
        //,preserveNullAndEmptyArrays: true // LEFT JOIN
      }
    },
    {
      // LEFT JOIN con claseMovimiento
      $lookup: {
        from: "claseMovimiento",
        localField: "claseMovimiento",
        foreignField: "idClaseMovimiento",
        as: "claseMovimientoInfo"
      }
    },
     {
      //agrupación sumando monto
      $group: {
        _id: {
          claseMovimiento: "$docGastoInfo.claseMovimiento",
          comentario: "$docGastoInfo.comentario",
          mes: { $month: "$fechaDate" },
          //claseMovimiento:"$claseMovimiento",
          descripcionMovimiento: "$claseMovimientoInfo.descripcion"
        },
        totalMonto: { $sum: "$monto" }
      }
    },
    {
      $unwind: {
        path: "$claseMovimientoInfo",
        preserveNullAndEmptyArrays: true
      }
    },
    {
      $project: {
        _id: 0,
        //claseMovimiento: "$_id.claseMovimiento",
        idCasa: "$_id.claseMovimiento",
        codigoCasa: "$_id.claseMovimiento",
        familia: {
            $cond: {
              if: { $in: ["$_id.claseMovimiento", [98,99]] },
              then: "$_id.comentario",
              else: "$_id.descripcionMovimiento"
            }
          },
        mes: "$_id.mes",
        totalMonto: 1
      }
    },
    {
      $sort: {
        claseMovimiento: 1,
        mes: 1,  
      }
    }
  ]).toArray() //toArray() es para que los muestre todos